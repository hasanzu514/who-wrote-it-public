{"version":3,"sources":["components/UI/Card.js","routes/Homepage.js","components/Homepage/Homepage.js","components/Examples/ExampleStartButton.js","components/Examples/Participant.js","components/Examples/Score.js","components/Examples/NextWord.js","components/UI/LoadingBar.js","components/Examples/Reveal.js","routes/Example.js","components/Examples/Examples.js","store/index.js","components/GameSetup/HiddenInput.js","components/GameSetup/GameSetup.js","routes/GameSetup.js","components/InGame/Participant.js","components/InGame/Score.js","components/InGame/NextWord.js","components/InGame/Reveal.js","components/WrongRoute/WrongRoute.js","routes/InGame.js","components/InGame/InGame.js","components/Layout/Header.js","components/Lobby/Player.js","routes/Lobby.js","components/Lobby/Lobby.js","components/Joingame/Joingame.js","routes/Joingame.js","components/GameOver/Scoreboard.js","routes/GameOver.js","components/GameOver/GameOver.js","App.js","index.js","components/InGame/Reveal.module.css","components/Lobby/Lobby.module.css","components/Examples/Reveal.module.css","components/InGame/Score.module.css","components/Joingame/Joingame.module.css","components/GameOver/Scoreboard.module.css","components/Examples/Score.module.css","components/Layout/Header.module.css","components/Examples/Participant.module.css","components/InGame/Participant.module.css","components/Homepage/Homepage.module.css","components/GameSetup/HiddenInput.module.css","components/UI/Card.module.css","components/Examples/ExampleStartButton.module.css","components/Examples/NextWord.module.css","components/UI/LoadingBar.module.css","components/GameSetup/GameSetup.module.css","components/InGame/NextWord.module.css","components/WrongRoute/WrongRoute.module.css","components/Lobby/Player.module.css","components/GameOver/GameOver.module.css"],"names":["Card","props","className","classes","card","children","Homepage","btn","to","ExampleStartButton","onClick","exampleHandler","social","button","title","Participant","button_classes","participant","reveal","name","answer","participant_correct","participant_incorrect","guess","participant_selected","answerHandler","value","Score","score","score_correct","score_number","correct","score_incorrect","incorrect","NextWord","getReplyHandler","next","LoadingBar","loading","color","Reveal","useState","setGuess","reply","setReply","setReveal","guesses","setGuesses","setAnswer","isLoading","setIsLoading","setCorrect","setIncorrect","isStart","setIsStart","showModal","setShowModal","modal_correct","modalFont","setModalFont","getReply","a","fetch","method","headers","response","json","data","selectedParticipants","setTimeout","modal_incorrect","useEffect","isOpen","contentLabel","modal","overlayClassName","overlay","guess_who","map","Math","random","start","Examples","enterExample","setEnterexample","setSocial","socialMedia","wordsSlice","createSlice","initialState","numReplies","waitingForOthers","participants","numCorrect","numIncorrect","table","questionNumber","numQuestions","reducers","setup","state","action","payload","setNextReply","setEnterExample","setScore","setSubmitAnswer","setNumQuestions","reset","gameSetupSlice","fileData","socialType","socket","step","host","finalScores","username","correctArray","answerTimeArray","setFileData","setSocialType","setSocket","setStep","setHost","setFinalScores","setUsername","lobbySlice","players","code","addPlayer","push","setAllPlayers","usernames","initializePlayersAndHost","setCode","wordsActions","actions","gameSetupActions","lobbyActions","store","configureStore","reducer","words","gameSetup","lobby","middleware","getDefaultMiddleware","serializableCheck","HiddenInput","dispatch","useDispatch","fileName","setFileName","input","htmlFor","text","type","onChange","event","file","target","files","reader","FileReader","onload","result","readAsText","id","filename","GameSetup","navigate","useNavigate","showParticipants","setShowParticipants","setParticipants","showInfoModal","setShowInfoModal","errorMessage","setErrorMessage","useSelector","socialSite","setSocialSite","selectHandler","loadChatHandler","trim","body","JSON","stringify","ok","message","joinLobbyHandler","preventDefault","io","renameArray","i","length","originalName","newName","gameCode","emit","modal_text","modal_info","info_div","info_text","info_anchor","href","placeholder","info_btn","site","btn_selected","onSubmit","participant_label","for","participant_input","participant_guess","score_value","nextReplyHandler","on","WrongRoute","InGame","Header","leaveGameHandler","disconnect","header","header_container","header_text","logout","Player","Lobby","timerMessage","setTimerMessage","copyButtonClass","setCopyButtonClass","timer","navigator","clipboard","writeText","window","location","split","btn_copy","player","arrow","arrow_up","arrow_down","Joingame","useSearchParams","searchParams","get","joinGameHandler","join","joingame","Joinggame","Scoreboard","maxScore","statsArray","stats_question","stats_correct","stats_time","finalScore","scorebar","style","width","floor","GameOver","App","updateData","connect","path","element","Example","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.4a72f544.chunk.js","sourcesContent":["import classes from \"./Card.module.css\";\r\n\r\nconst Card = (props) => {\r\n  return <div className={classes.card}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import Homepage from \"../components/Homepage/Homepage\"\r\n\r\nexport default Homepage","import classes from \"./Homepage.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Card from \"../UI/Card\";\r\n\r\nconst Homepage = () => {\r\n  return (\r\n    <Card>\r\n\r\n      <h2>Do you really know your friends?</h2>\r\n      <p>\r\n        Guess who wrote each reply in your Facebook or Whatsapp chats! Jump into the\r\n        example to see how it works. If you're already familiar, start a game!\r\n      </p>\r\n      <div>\r\n        <Link className={classes.btn} to=\"/gamesetup\">\r\n          New Game\r\n        </Link>\r\n        <Link className={classes.btn} to=\"/joingame\">\r\n          Join Game\r\n        </Link>\r\n      </div>\r\n      <div>\r\n        <Link className={classes.btn} to=\"/example\">\r\n          Jump to Examples\r\n        </Link>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Homepage;\r\n","import classes from \"./ExampleStartButton.module.css\";\r\n\r\nconst ExampleStartButton = (props) => {\r\n  const exampleHandler = () => {\r\n    props.exampleHandler(props.social);\r\n  };\r\n\r\n  return (\r\n    <button onClick={exampleHandler} className={classes.button}>\r\n      {props.title}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ExampleStartButton;\r\n","import classes from \"./Participant.module.css\";\r\n\r\nconst Participant = (props) => {\r\n  const answerHandler = () => {\r\n    props.answerHandler(props.name);\r\n  };\r\n\r\n  let button_classes = classes.participant;\r\n  if (props.reveal) {\r\n    if (props.name === props.answer) {\r\n      button_classes = classes.participant_correct;\r\n    } else {\r\n      button_classes = classes.participant_incorrect;\r\n    }\r\n  }\r\n  if (props.guess === props.name) {\r\n    button_classes = `${button_classes} ${classes.participant_selected}`;\r\n  }\r\n\r\n  return (\r\n    <button\r\n      onClick={answerHandler}\r\n      value={props.name}\r\n      className={button_classes}\r\n    >\r\n      {props.name}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Participant;\r\n","import classes from \"./Score.module.css\";\r\n\r\n\r\nconst Score = (props) => {\r\n  return (\r\n    <div className={classes.score}>\r\n      <span className={classes.score_correct}>\r\n        Correct: <span className={classes.score_number}>{props.correct}</span>\r\n      </span>\r\n      <span className={classes.score_incorrect}>\r\n        Incorrect:{\" \"}\r\n        <span className={classes.score_number}>{props.incorrect}</span>\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Score;\r\n","import classes from \"./NextWord.module.css\";\r\n\r\nconst NextWord = (props) => {\r\n  const nextReplyHandler = () => {\r\n    props.getReplyHandler();\r\n  };\r\n\r\n  return (\r\n    <button onClick={nextReplyHandler} className={classes.next}>\r\n      Next reply\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default NextWord;\r\n","import { FadingBalls } from \"react-cssfx-loading\";\r\nimport classes from \"./LoadingBar.module.css\";\r\n\r\nconst LoadingBar = () => {\r\n  return (\r\n    <div className={classes.loading}>\r\n      <FadingBalls color=\"#20339e\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingBar;\r\n","import classes from \"./Reveal.module.css\";\r\n\r\nimport Participant from \"./Participant\";\r\nimport Score from \"./Score\";\r\nimport NextWord from \"./NextWord\";\r\nimport Modal from \"react-modal\";\r\nimport LoadingBar from \"../UI/LoadingBar\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst Reveal = (props) => {\r\n  const [guess, setGuess] = useState(null);\r\n  const [reply, setReply] = useState(null);\r\n  const [reveal, setReveal] = useState(false);\r\n  const [guesses, setGuesses] = useState([]);\r\n  const [answer, setAnswer] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [correct, setCorrect] = useState(0);\r\n  const [incorrect, setIncorrect] = useState(0);\r\n  const [isStart, setIsStart] = useState(true);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [modalFont, setModalFont] = useState(classes.modal_correct);\r\n\r\n  const social = props.social;\r\n\r\n  const getReply = async () => {\r\n    setIsLoading(true);\r\n    const response = await fetch(\"api/examplereply\", {\r\n      method: \"GET\",\r\n      headers: { \"Content-Type\": \"application/json\", social },\r\n    });\r\n    const data = await response.json();\r\n    setAnswer(data.answer);\r\n    setGuesses(data.selectedParticipants);\r\n    setReply(data.reply);\r\n    setGuess(false);\r\n    setReveal(false);\r\n    setIsLoading(false);\r\n    setIsStart(false);\r\n  };\r\n  const answerHandler = (guess) => {\r\n    if (guess === answer) {\r\n      setCorrect(correct + 1);\r\n      setShowModal(true);\r\n      setModalFont(classes.modal_correct);\r\n      setTimeout(() => setShowModal(false), 1000);\r\n    } else {\r\n      setIncorrect(incorrect + 1);\r\n      setShowModal(true);\r\n      setModalFont(classes.modal_incorrect);\r\n      setTimeout(() => setShowModal(false), 1000);\r\n    }\r\n    setReveal(true);\r\n    setGuess(guess);\r\n  };\r\n\r\n  useEffect(() => {});\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        isOpen={showModal}\r\n        contentLabel=\"Show Result\"\r\n        className={classes.modal}\r\n        overlayClassName={classes.overlay}\r\n      >\r\n        <p className={modalFont}>\r\n          {modalFont === classes.modal_correct ? \"Correct!\" : \"Incorrect!\"}\r\n        </p>\r\n      </Modal>\r\n\r\n      <Score correct={correct} incorrect={incorrect} />\r\n      {!isLoading && (\r\n        <>\r\n          <p>{reply}</p>\r\n          {reply && (\r\n            <>\r\n              <div className={classes.guess_who}>Guess who wrote it:</div>\r\n              <div>\r\n                {guesses.map((participant) => {\r\n                  return (\r\n                    <Participant\r\n                      key={Math.random()}\r\n                      name={participant.name}\r\n                      answerHandler={answerHandler}\r\n                      answer={answer}\r\n                      reveal={reveal}\r\n                      guess={guess}\r\n                    />\r\n                  );\r\n                })}\r\n              </div>\r\n              {reveal && (\r\n                <div>\r\n                  <NextWord getReplyHandler={getReply} />\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n      {isLoading && <LoadingBar />}\r\n      {isStart && (\r\n        <button className={classes.start} onClick={getReply}>\r\n          Start game\r\n        </button>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Reveal;\r\n","import Examples from \"../components/Examples/Examples\";\r\n\r\nexport default Examples;\r\n","import ExampleStartButton from \"./ExampleStartButton\";\r\nimport Card from \"../UI/Card\";\r\nimport Reveal from \"./Reveal\";\r\nimport { useState } from \"react\";\r\n\r\nconst Examples = () => {\r\n  const [enterExample, setEnterexample] = useState(false);\r\n  const [social, setSocial] = useState(null);\r\n\r\n  const exampleHandler = (socialMedia) => {\r\n    setEnterexample(true);\r\n    setSocial(socialMedia);\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      {!enterExample && (\r\n        <>\r\n          <p>Check out the example below from a FaceBook chat. In a real game, the time it takes you to answer a question affects the points you get!</p>\r\n          <ExampleStartButton\r\n            title=\"Facebook Example\"\r\n            social=\"Facebook\"\r\n            exampleHandler={exampleHandler}\r\n          />\r\n        </>\r\n      )}\r\n      {enterExample && <Reveal social={social} />}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Examples;\r\n\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst wordsInitialState = {\r\n  numReplies: null,\r\n  reply: null,\r\n  answer: null,\r\n  reveal: false,\r\n  waitingForOthers: false,\r\n  guess: null,\r\n  enterExample: false,\r\n  participants: [],\r\n  guesses: [],\r\n  numCorrect: 0,\r\n  numIncorrect: 0,\r\n  table: null,\r\n  isLoading: false,\r\n  score: 0,\r\n  questionNumber: 0,\r\n  numQuestions: 10,\r\n};\r\n\r\nconst wordsSlice = createSlice({\r\n  name: \"words\",\r\n  initialState: wordsInitialState,\r\n  reducers: {\r\n    setup(state, action) {\r\n      state.numReplies = action.payload.numReplies;\r\n      state.participants = action.payload.participants;\r\n      state.table = action.payload.table;\r\n    },\r\n    setIsLoading(state, action) {\r\n      state.isLoading = action.payload.isLoading;\r\n    },\r\n    setNextReply(state, action) {\r\n      state.reply = action.payload.reply;\r\n      state.guesses = action.payload.guesses;\r\n      state.questionNumber = action.payload.questionNumber;\r\n      state.numQuestions = action.payload.numQuestions;\r\n      state.answer = null;\r\n      state.guess = null;\r\n      state.waitingForOthers = false;\r\n    },\r\n    setEnterExample(state) {\r\n      state.enterExample = true;\r\n    },\r\n    setReveal(state, action) {\r\n      state.reveal = action.payload.reveal;\r\n    },\r\n    setAnswer(state, action) {\r\n      state.answer = action.payload.answer;\r\n      if (action.payload.answer) {\r\n        state.reveal = true;\r\n      }\r\n    },\r\n    setScore(state, action) {\r\n      state.score = action.payload.score;\r\n      state.numCorrect = action.payload.correct;\r\n      state.numIncorrect = action.payload.incorrect;\r\n    },\r\n    setSubmitAnswer(state, action) {\r\n      state.guess = action.payload.guess;\r\n      if (action.payload.guess) {\r\n        state.waitingForOthers = true;\r\n      }\r\n    },\r\n    setNumQuestions(state, action) {\r\n      state.numQuestions = action.payload.numQuestions;\r\n    },\r\n    reset(state) {\r\n      state.numReplies = null;\r\n      state.reply = null;\r\n      state.answer = null;\r\n      state.reveal = false;\r\n      state.waitingForOthers = false;\r\n      state.guess = null;\r\n      state.enterExample = false;\r\n      state.participants = [];\r\n      state.guesses = [];\r\n      state.numCorrect = 0;\r\n      state.numIncorrect = 0;\r\n      state.table = null;\r\n      state.isLoading = false;\r\n      state.score = 0;\r\n    },\r\n  },\r\n});\r\n\r\nconst gameSetupInitialState = {\r\n  fileData: null,\r\n  socialType: null,\r\n  socket: null,\r\n  step: null,\r\n  host: false,\r\n  finalScores: [],\r\n  username: null,\r\n  correctArray: [],\r\n  answerTimeArray: []\r\n};\r\n\r\nconst gameSetupSlice = createSlice({\r\n  name: \"gameSetup\",\r\n  initialState: gameSetupInitialState,\r\n  reducers: {\r\n    setFileData(state, action) {\r\n      state.fileData = action.payload.fileData;\r\n    },\r\n    setSocialType(state, action) {\r\n      state.socialType = action.payload.socialType;\r\n    },\r\n    setSocket(state, action) {\r\n      state.socket = action.payload.socket;\r\n    },\r\n    setStep(state, action) {\r\n      state.step = action.payload.step;\r\n    },\r\n    setHost(state, action) {\r\n      state.host = action.payload.host;\r\n    },\r\n    setFinalScores(state, action) {\r\n      state.finalScores = action.payload.finalScores;\r\n      state.correctArray = action.payload.correctArray;\r\n      state.answerTimeArray = action.payload.answerTimeArray;\r\n    },\r\n    setUsername(state, action) {\r\n      state.username = action.payload.username\r\n    },\r\n    reset(state) {\r\n      state.fileData = null;\r\n      state.socialType = null;\r\n      state.socket = null;\r\n      state.step = null;\r\n      state.host = false;\r\n      state.finalScores = []\r\n      state.username = null\r\n      state.correctArray = []\r\n      state.answerTimeArray = []\r\n    },\r\n  },\r\n});\r\n\r\nconst lobbyInitialState = {\r\n  players: [],\r\n  code: null,\r\n};\r\n\r\nconst lobbySlice = createSlice({\r\n  name: \"lobby\",\r\n  initialState: lobbyInitialState,\r\n  reducers: {\r\n    addPlayer(state, action) {\r\n      state.players.push(action.payload.username);\r\n    },\r\n    setAllPlayers(state, action) {\r\n      state.players = action.payload.usernames;\r\n    },\r\n    initializePlayersAndHost(state, action) {\r\n      state.players = action.payload.usernames;\r\n    },\r\n    setCode(state, action) {\r\n      state.code = action.payload.code;\r\n    },\r\n    reset(state) {\r\n      state.players = [];\r\n      state.code = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const wordsActions = wordsSlice.actions;\r\nexport const gameSetupActions = gameSetupSlice.actions;\r\nexport const lobbyActions = lobbySlice.actions;\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    words: wordsSlice.reducer,\r\n    gameSetup: gameSetupSlice.reducer,\r\n    lobby: lobbySlice.reducer,\r\n  },\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: false,\r\n    }),\r\n});\r\n\r\nexport default store;\r\n","import classes from \"./HiddenInput.module.css\";\r\nimport { gameSetupActions } from \"../../store\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useState } from \"react\";\r\n\r\nconst HiddenInput = (props) => {\r\n  const dispatch = useDispatch();\r\n  const [fileName, setFileName] = useState(\"No file selected\")\r\n\r\n  const uploadHandler = (event) => {\r\n    const file = event.target.files[0];\r\n    const reader = new FileReader();\r\n    reader.onload = async function (event) {\r\n      dispatch(gameSetupActions.setFileData({ fileData: event.target.result }));\r\n      setFileName(file.name)\r\n\r\n\r\n      // let consolidatedData;\r\n      // let socialNetwork\r\n      // if (file.name.includes(\".txt\")) {\r\n      //   consolidatedData = convertWhatsappToJSON(event.target.result);\r\n      //   socialNetwork = \"whatsapp\"\r\n      // } else if (file.name.includes(\".json\")) {\r\n      //   consolidatedData = convertFacebookToJSON(event.target.result);\r\n      //   socialNetwork = \"facebook\"\r\n      // }\r\n      // const response = await fetch(\r\n      //   `https://who-wrote-it-de845-default-rtdb.firebaseio.com/${socialNetwork}.json`,\r\n      //   {\r\n      //     method: \"PUT\",\r\n      //     body: JSON.stringify(consolidatedData),\r\n      //   }\r\n      // );\r\n      // if (!response.ok) {\r\n      //   console.log(response);\r\n      //   return;\r\n      // }\r\n    };\r\n\r\n    reader.readAsText(file);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.input}>\r\n        <label htmlFor=\"text-input\">{props.text}</label>\r\n        <input type={props.type} onChange={uploadHandler} id=\"text-input\" />\r\n        <p className={classes.filename}>{fileName}</p>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HiddenInput;\r\n","import classes from \"./GameSetup.module.css\";\r\n\r\nimport { io } from \"socket.io-client\";\r\n\r\nimport HiddenInput from \"./HiddenInput\";\r\nimport Card from \"../UI/Card\";\r\nimport { useState } from \"react\";\r\nimport { gameSetupActions } from \"../../store\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { FadingBalls } from \"react-cssfx-loading\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { lobbyActions, wordsActions } from \"../../store\";\r\nimport Modal from \"react-modal\";\r\nimport LoadingBar from \"../UI/LoadingBar\";\r\n\r\nconst GameSetup = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [showParticipants, setShowParticipants] = useState(false);\r\n  const [participants, setParticipants] = useState([]);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [showInfoModal, setShowInfoModal] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  const fileData = useSelector((state) => state.gameSetup.fileData);\r\n  const [socialSite, setSocialSite] = useState(null);\r\n\r\n  const socialSites = [\"Whatsapp\", \"Facebook\"];\r\n\r\n  const selectHandler = (event) => {\r\n    setSocialSite(event.target.id);\r\n  };\r\n\r\n  const loadChatHandler = async () => {\r\n    setIsLoading(true);\r\n    if (username.trim() === \"\") {\r\n      setErrorMessage(\"Please enter a valid username.\");\r\n      setShowModal(true);\r\n    } else {\r\n      const response = await fetch(\"/api/upload-data\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          data: fileData,\r\n          social: socialSite,\r\n          username,\r\n        }),\r\n      });\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        if (data.message === \"success\") {\r\n          dispatch(wordsActions.reset());\r\n          dispatch(lobbyActions.reset());\r\n          dispatch(gameSetupActions.reset());\r\n          dispatch(lobbyActions.addPlayer({ username }));\r\n          dispatch(gameSetupActions.setHost({ host: true }));\r\n          setShowParticipants(true);\r\n          setIsLoading(false);\r\n          setParticipants(\r\n            data.participants.map((participant) => participant.name)\r\n          );\r\n        } else {\r\n          setErrorMessage(data.text);\r\n          setShowModal(true);\r\n        }\r\n      } else {\r\n        setErrorMessage(\r\n          \"There was an error uploading your file, please try again.\"\r\n        );\r\n        setShowModal(true);\r\n      }\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n  const joinLobbyHandler = async (event) => {\r\n    event.preventDefault();\r\n    setIsLoading(true);\r\n    const socket = io();\r\n    dispatch(gameSetupActions.setSocket({ socket }));\r\n    let renameArray = [];\r\n    for (let i = 0; i < participants.length; i++) {\r\n      renameArray.push({\r\n        originalName: participants[i],\r\n        newName: event.target[i].value.trim(),\r\n      });\r\n    }\r\n    const response = await fetch(\"/api/update-names\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        renameArray,\r\n      }),\r\n    });\r\n    if (response.ok) {\r\n      const data = await response.json();\r\n      if (data.message === \"success\") {\r\n        dispatch(gameSetupActions.setUsername({ username }));\r\n        dispatch(lobbyActions.setCode({ code: data.gameCode }));\r\n        socket.emit(\"join channel\");\r\n        dispatch(gameSetupActions.setStep({ step: \"lobby\" }));\r\n        navigate(\"/lobby\");\r\n      }\r\n    } else {\r\n      setErrorMessage(\"There was an error creating the game, please try again\");\r\n      setShowModal(true);\r\n    }\r\n\r\n    setIsLoading(false);\r\n  };\r\n  const usernameChangeHandler = (event) => {\r\n    setUsername(event.target.value);\r\n  };\r\n\r\n  const closeModalHandler = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  const showInfoModalHandler = () => {\r\n    setShowInfoModal(true);\r\n  };\r\n\r\n  const closeInfoModalHandler = () => {\r\n    setShowInfoModal(false);\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <Modal\r\n        isOpen={showModal}\r\n        contentLabel=\"Join game error\"\r\n        className={classes.modal}\r\n        overlayClassName={classes.overlay}\r\n      >\r\n        <p className={classes.modal_text}>{errorMessage}</p>\r\n        <button className={classes.btn} onClick={closeModalHandler}>\r\n          Close\r\n        </button>\r\n      </Modal>\r\n      <Modal\r\n        isOpen={showInfoModal}\r\n        contentLabel=\"Join game error\"\r\n        className={classes.modal_info}\r\n        overlayClassName={classes.overlay}\r\n      >\r\n        <div className={classes.info_div}>\r\n          <span className={classes.info_text}>\r\n            Use the links below to see how to download your chat!\r\n          </span>\r\n          <div>\r\n            <a\r\n              className={classes.info_anchor}\r\n              href=\"https://www.facebook.com/help/1701730696756992\"\r\n              target=\"_blank\"\r\n            >\r\n              Facebook (json file)\r\n            </a>\r\n          </div>\r\n          <div>\r\n            <a\r\n              className={classes.info_anchor}\r\n              href=\"https://faq.whatsapp.com/android/chats/how-to-save-your-chat-history/?lang=en\"\r\n              target=\"_blank\"\r\n            >\r\n              Whatsapp (txt file)\r\n            </a>\r\n          </div>\r\n        </div>\r\n        <button className={classes.btn} onClick={closeInfoModalHandler}>\r\n          Close\r\n        </button>\r\n      </Modal>\r\n      {!showParticipants && (\r\n        <>\r\n          <p>Enter a username:</p>\r\n          <input\r\n            className={classes.username}\r\n            type=\"text\"\r\n            placeholder=\"username\"\r\n            onChange={usernameChangeHandler}\r\n            value={username}\r\n          />\r\n          <p>\r\n            Choose a file type to upload:\r\n            <span onClick={showInfoModalHandler} className={classes.info_btn}>\r\n              Where do I get a chat file?\r\n            </span>\r\n          </p>\r\n\r\n          {socialSites.map((site) => (\r\n            <button\r\n              key={site}\r\n              id={site}\r\n              onClick={selectHandler}\r\n              className={\r\n                socialSite === site ? classes.btn_selected : classes.btn\r\n              }\r\n            >\r\n              {site}\r\n            </button>\r\n          ))}\r\n          {socialSite && (\r\n            <>\r\n              <p>Upload your {socialSite} chat file: </p>\r\n              <HiddenInput type=\"file\" text=\"Chat File\" />\r\n              <button className={classes.btn} onClick={loadChatHandler}>\r\n                Load Chat\r\n              </button>\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n      {showParticipants && (\r\n        <p>\r\n          These are the names found in the chat. You can change them before\r\n          creating the game.\r\n        </p>\r\n      )}\r\n      <form onSubmit={joinLobbyHandler}>\r\n        {participants.map((participant) => {\r\n          return (\r\n            <>\r\n              <div className={classes.participant}>\r\n                <label className={classes.participant_label} for={participant}>\r\n                  {participant}\r\n                </label>\r\n                <input\r\n                  className={classes.participant_input}\r\n                  id={participant}\r\n                  type=\"text\"\r\n                  placeholder=\"rename\"\r\n                />\r\n              </div>\r\n            </>\r\n          );\r\n        })}\r\n        {showParticipants && (\r\n          <button type=\"submit\" className={classes.btn}>\r\n            Create Game\r\n          </button>\r\n        )}\r\n      </form>\r\n      {isLoading && <LoadingBar />}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default GameSetup;\r\n","import GameSetup from \"../components/GameSetup/GameSetup\";\r\n\r\nexport default GameSetup","import classes from \"./Participant.module.css\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { wordsActions } from \"../../store\";\r\n\r\nconst Participant = (props) => {\r\n  const dispatch = useDispatch();\r\n  const reveal = useSelector((state) => state.words.reveal);\r\n  const waitingForOthers = useSelector((state) => state.words.waitingForOthers);\r\n  const guess = useSelector(state => state.words.guess)\r\n\r\n  const submitAnswerHandler = () => {\r\n    if (waitingForOthers) {\r\n      return;\r\n    }\r\n    dispatch(wordsActions.setSubmitAnswer({ guess: props.name }));\r\n    props.answerHandler(props.name);\r\n  };\r\n\r\n  let button_classes = classes.participant;\r\n  if (reveal) {\r\n    if (props.name === props.answer) {\r\n      button_classes = classes.participant_correct;\r\n    } else {\r\n      button_classes = classes.participant_incorrect;\r\n    }\r\n  }\r\n  if (guess && props.name === guess) {\r\n    button_classes = button_classes + ` ${classes.participant_guess}`\r\n  }\r\n\r\n  return (\r\n    <button\r\n      onClick={submitAnswerHandler}\r\n      value={props.name}\r\n      className={button_classes}\r\n    >\r\n      {props.name}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Participant;\r\n","import classes from \"./Score.module.css\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Score = () => {\r\n  const numCorrect = useSelector((state) => state.words.numCorrect);\r\n  const numIncorrect = useSelector((state) => state.words.numIncorrect);\r\n  const score = useSelector((state) => state.words.score);\r\n\r\n  return (\r\n    <div className={classes.score}>\r\n      <span className={classes.score_correct}>\r\n        Correct: <span className={classes.score_number}>{numCorrect}</span>\r\n      </span>\r\n      <span className={classes.score_incorrect}>\r\n        Incorrect: <span className={classes.score_number}>{numIncorrect}</span>\r\n      </span>\r\n      <div className={classes.score_value}>\r\n        Score: <span className={classes.score_number}>{score}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Score;\r\n","import classes from \"./NextWord.module.css\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { wordsActions } from \"../../store\";\r\n\r\n\r\nconst NextWord = (props) => {\r\n  const dispatch = useDispatch();\r\n  const socket = useSelector((state) => state.gameSetup.socket);\r\n\r\n\r\n  const nextReplyHandler = async () => {\r\n    dispatch(wordsActions.setIsLoading({ isLoading: true }));\r\n    socket.emit(\"next reply\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button onClick={nextReplyHandler} className={classes.next}>\r\n        Next reply\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NextWord;\r\n","import classes from \"./Reveal.module.css\";\r\n\r\nimport Participant from \"./Participant\";\r\nimport Score from \"./Score\";\r\nimport NextWord from \"./NextWord\";\r\nimport { FadingBalls } from \"react-cssfx-loading\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { gameSetupActions, wordsActions } from \"../../store\";\r\nimport { useNavigate } from \"react-router\";\r\n\r\nconst Reveal = (props) => {\r\n  const navigate = useNavigate();\r\n  const waitingForOthers = useSelector((state) => state.words.waitingForOthers);\r\n  const reply = useSelector((state) => state.words.reply);\r\n  const reveal = useSelector((state) => state.words.reveal);\r\n  const guesses = useSelector((state) => state.words.guesses);\r\n  const answer = useSelector((state) => state.words.answer);\r\n  const isLoading = useSelector((state) => state.words.isLoading);\r\n  const socket = useSelector((state) => state.gameSetup.socket);\r\n  const questionNumber = useSelector((state) => state.words.questionNumber);\r\n  const numQuestions = useSelector((state) => state.words.numQuestions);\r\n  const dispatch = useDispatch();\r\n  const host = useSelector((state) => state.gameSetup.host);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [modalFont, setModalFont] = useState(classes.modal_correct);\r\n\r\n  useEffect(() => {\r\n    if (socket) {\r\n      socket.on(\"check answer\", (answer, guess, score, correct, incorrect) => {\r\n        dispatch(wordsActions.setAnswer({ answer }));\r\n        dispatch(wordsActions.setScore({ score, correct, incorrect }));\r\n        if (guess === answer) {\r\n          setShowModal(true);\r\n          setModalFont(classes.modal_correct);\r\n          setTimeout(() => setShowModal(false), 1000);\r\n        } else {\r\n          setShowModal(true);\r\n          setModalFont(classes.modal_incorrect);\r\n          setTimeout(() => setShowModal(false), 1000);\r\n        }\r\n      });\r\n      socket.on(\"ready for answer\", () => {\r\n        socket.emit(\"get answer\");\r\n      });\r\n      socket.on(\"game over\", () => {\r\n        socket.emit(\"get scoreboard\")\r\n      })\r\n      socket.on(\"go to scoreboard\", (finalScores, correctArray, answerTimeArray) => {\r\n        dispatch(gameSetupActions.setFinalScores({ finalScores, correctArray, answerTimeArray }));\r\n        dispatch(gameSetupActions.setStep({ step: \"gameOver\" }));\r\n        navigate(\"/gameover\");\r\n      });\r\n    }\r\n  }, [socket, dispatch, navigate]);\r\n\r\n  const answerHandler = (guess) => {\r\n    socket.emit(\"submit guess\", guess);\r\n  };\r\n  const gameOverHandler = () => {\r\n    socket.emit(\"game over\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        isOpen={showModal}\r\n        contentLabel=\"Show Result\"\r\n        className={classes.modal}\r\n        overlayClassName={classes.overlay}\r\n      >\r\n        <p className={modalFont}>\r\n          {modalFont === classes.modal_correct ? \"Correct!\" : \"Incorrect!\"}\r\n        </p>\r\n      </Modal>\r\n      <Score />\r\n      {!isLoading && (\r\n        <>\r\n          <p>\r\n            Question {questionNumber}/{numQuestions}\r\n          </p>\r\n          <p>{reply}</p>\r\n          {reply && (\r\n            <>\r\n              <div className={classes.guess_who}>Guess who wrote it:</div>\r\n              <div>\r\n                {guesses.map((participant) => {\r\n                  return (\r\n                    <Participant\r\n                      key={Math.random()}\r\n                      name={participant.name}\r\n                      answerHandler={answerHandler}\r\n                      answer={answer}\r\n                    />\r\n                  );\r\n                })}\r\n              </div>\r\n              {waitingForOthers && !reveal && (\r\n                <p>Waiting for others to answer...</p>\r\n              )}\r\n              {reveal && host && questionNumber !== numQuestions && (\r\n                <div>\r\n                  <NextWord />\r\n                </div>\r\n              )}\r\n              {reveal && host && questionNumber === numQuestions && (\r\n                <div>\r\n                  <button onClick={gameOverHandler} className={classes.btn}>\r\n                    Scoreboard\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n      {isLoading && (\r\n        <div className={classes.loading}>\r\n          <FadingBalls color=\"#20339e\" />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Reveal;\r\n","import classes from \"./WrongRoute.module.css\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst WrongRoute = () => {\r\n  return (\r\n    <>\r\n      <p>Looks like you're not supposed to be here...</p>\r\n      <Link className={classes.btn} to=\"/\">\r\n        Back to Homepage\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WrongRoute;\r\n","import InGame from \"../components/InGame/InGame\";\r\n\r\nexport default InGame;\r\n","import Reveal from \"./Reveal\";\r\nimport Card from \"../UI/Card\";\r\nimport { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { wordsActions } from \"../../store\";\r\nimport WrongRoute from \"../WrongRoute/WrongRoute\";\r\n\r\nconst InGame = () => {\r\n  const socket = useSelector((state) => state.gameSetup.socket);\r\n  const step = useSelector((state) => state.gameSetup.step);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (socket) {\r\n      socket.on(\"next reply\", (reply, guesses, questionNumber, numQuestions) => {\r\n        dispatch(\r\n          wordsActions.setNextReply({\r\n            reply,\r\n            guesses,\r\n            questionNumber,\r\n            numQuestions,\r\n          })\r\n        );\r\n        dispatch(wordsActions.setIsLoading({ isLoading: false }));\r\n        dispatch(wordsActions.setReveal({ reveal: false }));\r\n      });\r\n    }\r\n\r\n  }, [socket, dispatch]);\r\n\r\n  return (\r\n    <Card>\r\n      {step === \"inGame\" && <Reveal />}\r\n      {step !== \"inGame\" && <WrongRoute />}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default InGame;\r\n","import classes from \"./Header.module.css\";\r\n\r\nimport { useNavigate } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { wordsActions, lobbyActions, gameSetupActions } from \"../../store\";\r\n\r\nconst Header = (props) => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const socket = useSelector((state) => state.gameSetup.socket);\r\n  const username = useSelector(state => state.gameSetup.username)\r\n  const leaveGameHandler = async () => {\r\n    socket.disconnect();\r\n    navigate(\"/\");\r\n    dispatch(wordsActions.reset());\r\n    dispatch(lobbyActions.reset());\r\n    dispatch(gameSetupActions.reset());\r\n  };\r\n\r\n  return (\r\n    <header className={classes.header}>\r\n      <div className={classes.header_container}>\r\n        <div className={classes.header_text}>\r\n          <Link to=\"/\">Guess who wrote it</Link>\r\n        </div>\r\n        {username && (\r\n          <div className={classes.logout}>\r\n            <span className={classes.username}>{username}</span>\r\n            <button onClick={leaveGameHandler}>Exit Game</button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import classes from \"./Player.module.css\";\r\n\r\nconst Player = (props) => {\r\n  return <span className={classes.username}>{props.username}</span>;\r\n};\r\n\r\nexport default Player;\r\n","import Lobby from \"../components/Lobby/Lobby\";\r\n\r\nexport default Lobby","import classes from \"./Lobby.module.css\";\r\n\r\nimport Card from \"../UI/Card\";\r\nimport Player from \"./Player\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { wordsActions, lobbyActions, gameSetupActions } from \"../../store\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { useEffect, useState } from \"react\";\r\nimport WrongRoute from \"../WrongRoute/WrongRoute\";\r\n\r\nconst Lobby = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const players = useSelector((state) => state.lobby.players);\r\n  const host = useSelector((state) => state.gameSetup.host);\r\n  const socket = useSelector((state) => state.gameSetup.socket);\r\n  const step = useSelector((state) => state.gameSetup.step);\r\n  const gameCode = useSelector((state) => state.lobby.code);\r\n  const numQuestions = useSelector((state) => state.words.numQuestions);\r\n  const [timerMessage, setTimerMessage] = useState(null)\r\n  const [copyButtonClass, setCopyButtonClass] = useState(classes.btn)\r\n\r\n  useEffect(() => {\r\n    if (socket) {\r\n      socket.on(\"update lobby\", (usernames) => {\r\n        dispatch(lobbyActions.setAllPlayers({ usernames }));\r\n      });\r\n      socket.on(\"next reply\", (reply, guesses, questionNumber, numQuestions) => {\r\n        dispatch(\r\n          wordsActions.setNextReply({\r\n            reply,\r\n            guesses,\r\n            questionNumber,\r\n            numQuestions,\r\n          })\r\n        );\r\n        dispatch(gameSetupActions.setStep({ step: \"inGame\" }));\r\n        navigate(\"/ingame\");\r\n      });\r\n      socket.on(\"countdown\", (timer) => {\r\n        setTimerMessage(`Game starting in ${timer} seconds.`)\r\n      });\r\n    }\r\n\r\n  }, [socket, dispatch, navigate]);\r\n\r\n  const startGameHandler = () => {\r\n    socket.emit(\"start game\", numQuestions);\r\n  };\r\n\r\n  const upHandler = () => {\r\n    if (numQuestions < 20) {\r\n      dispatch(\r\n        wordsActions.setNumQuestions({ numQuestions: numQuestions + 1 })\r\n      );\r\n    } else {\r\n      dispatch(wordsActions.setNumQuestions({ numQuestions: 2 }));\r\n    }\r\n  };\r\n\r\n  const downHandler = () => {\r\n    if (numQuestions > 2) {\r\n      dispatch(\r\n        wordsActions.setNumQuestions({ numQuestions: numQuestions - 1 })\r\n      );\r\n    } else {\r\n      dispatch(wordsActions.setNumQuestions({ numQuestions: 20 }));\r\n    }\r\n  };\r\n\r\n  const copyHandler = () => {\r\n    navigator.clipboard.writeText(window.location.href.split(\"/lobby\")[0] + `/joingame?code=${gameCode}`)\r\n    setCopyButtonClass(`${classes.btn} ${classes.btn_copy}`)\r\n    setTimeout(() => setCopyButtonClass(classes.btn), 1000)\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      {step === \"lobby\" && (\r\n        <>\r\n          <h2>Game ID: {gameCode}</h2>\r\n          <button className={copyButtonClass} onClick={copyHandler}>Copy link to join game</button>\r\n          <h3>Players in lobby</h3>\r\n          {players.map((player) => {\r\n            return <Player username={player} key={player} />;\r\n          })}\r\n          {host && !timerMessage && (\r\n            <>\r\n              <div>\r\n                <p>Number of questions: {numQuestions}</p>\r\n                <button onClick={upHandler} className={classes.arrow}>\r\n                  <i className={classes.arrow_up}></i>\r\n                </button>\r\n                <button onClick={downHandler} className={classes.arrow}>\r\n                  <i className={classes.arrow_down}></i>\r\n                </button>\r\n              </div>\r\n              <button onClick={startGameHandler} className={classes.btn}>\r\n                Start Game\r\n              </button>\r\n            </>\r\n          )}\r\n          {!host && !timerMessage && <h3>waiting for host to start game...</h3>}\r\n          {timerMessage && <p>{timerMessage}</p>}\r\n        </>\r\n      )}\r\n      {step !== \"lobby\" && <WrongRoute />}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Lobby;\r\n","import Card from \"../UI/Card\";\r\nimport classes from \"./Joingame.module.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { lobbyActions, gameSetupActions } from \"../../store\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\nimport Modal from \"react-modal\";\r\nimport { useSearchParams } from \"react-router-dom\"\r\n\r\nconst Joingame = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const [code, setCode] = useState(null);\r\n  const [username, setUsername] = useState(\"\")\r\n  const [showModal, setShowModal] = useState(false)\r\n  const [errorMessage, setErrorMessage] = useState(\"\")\r\n  let [searchParams] = useSearchParams()\r\n\r\n  useEffect(() => {\r\n    setCode(searchParams.get(\"code\"))\r\n  }, [searchParams])\r\n\r\n  const joinGameHandler = async () => {\r\n    const response = await fetch(\"/api/join-game\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        code,\r\n        username,\r\n      }),\r\n    });\r\n    const data = await response.json()\r\n    if (data.join === true) {\r\n      const socket = io();\r\n      dispatch(gameSetupActions.setUsername({ username }))\r\n      dispatch(gameSetupActions.setSocket({ socket }));\r\n      socket.on(\"join lobby\", (usernames, code) => {\r\n        dispatch(lobbyActions.setAllPlayers({ usernames }));\r\n        dispatch(lobbyActions.setCode({ code }));\r\n        dispatch(gameSetupActions.setStep({ step: \"lobby\" }));\r\n        navigate(\"/lobby\");\r\n      });\r\n      socket.emit(\"join game\", code, username);\r\n    } else {\r\n      setErrorMessage(data.message)\r\n      setShowModal(true)\r\n    }\r\n\r\n  };\r\n\r\n  const codeChangeHandler = (event) => {\r\n    setCode(event.target.value);\r\n  };\r\n\r\n  const usernameChangeHandler = (event) => {\r\n    setUsername(event.target.value)\r\n  }\r\n\r\n  const closeModalHandler = () => {\r\n    setShowModal(false)\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <Modal\r\n        isOpen={showModal}\r\n        contentLabel=\"Join game error\"\r\n        className={classes.modal}\r\n        overlayClassName={classes.overlay}\r\n      >\r\n        <p className={classes.modal_text} >\r\n          {errorMessage}\r\n        </p>\r\n        <button className={classes.btn} onClick={closeModalHandler}>Close</button>\r\n      </Modal>\r\n      <p>Enter a username:</p>\r\n      <input\r\n        className={classes.username}\r\n        type=\"text\"\r\n        placeholder=\"username\"\r\n        onChange={usernameChangeHandler}\r\n        value={username}\r\n      />\r\n      <div className={classes.joingame}>\r\n        <label htmlFor=\"code\">Enter code to join game:</label>\r\n        <input\r\n          onChange={codeChangeHandler}\r\n          type=\"text\"\r\n          placeholder=\"xxxx\"\r\n          id=\"code\"\r\n          value={code}\r\n        ></input>\r\n      </div>\r\n      <button onClick={joinGameHandler} className={classes.btn}>\r\n        Join Game\r\n      </button>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Joingame;\r\n","import Joinggame from \"../components/Joingame/Joingame\";\r\n\r\nexport default Joinggame;\r\n","import classes from \"./Scoreboard.module.css\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Scoreboard = () => {\r\n  const finalScores = useSelector((state) => state.gameSetup.finalScores);\r\n  const correctArray = useSelector((state) => state.gameSetup.correctArray);\r\n  const answerTimeArray = useSelector((state) => state.gameSetup.answerTimeArray);\r\n\r\n  let maxScore;\r\n  if (finalScores && finalScores.length > 0) {\r\n    maxScore = finalScores[0].score;\r\n  }\r\n\r\n  let statsArray = []\r\n  if (correctArray) {\r\n    for (let i = 0; i < correctArray.length; i++) {\r\n      statsArray.push(\r\n        <tr>\r\n          <td className={classes.stats_question}>{`Q${i + 1}`}</td>\r\n          <td className={classes.stats_correct}>{correctArray[i]}</td>\r\n          <td className={classes.stats_time}>Answer time: {answerTimeArray[i]} s</td>\r\n        </tr>\r\n      )\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <table>\r\n        {finalScores.map((finalScore) => {\r\n          return (\r\n            <tr>\r\n              <td className={classes.name}>{finalScore.name}</td>\r\n              <td className={classes.scorebar}>\r\n                <div\r\n                  style={{\r\n                    width: `${Math.floor(\r\n                      (finalScore.score / maxScore) * 100\r\n                    )}%`,\r\n                  }}\r\n                ></div>\r\n              </td>\r\n              <td className={classes.score}>{finalScore.score}</td>\r\n            </tr>\r\n          );\r\n        })}\r\n      </table>\r\n      <table>\r\n        {statsArray}\r\n      </table>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Scoreboard;\r\n","import GameOver from \"../components/GameOver/GameOver\";\r\n\r\nexport default GameOver;\r\n","import classes from \"./GameOver.module.css\";\r\n\r\nimport Scoreboard from \"./Scoreboard\";\r\nimport Card from \"../UI/Card\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { wordsActions, lobbyActions, gameSetupActions } from \"../../store\";\r\nimport WrongRoute from \"../WrongRoute/WrongRoute\";\r\n\r\nconst GameOver = () => {\r\n  const socket = useSelector((state) => state.gameSetup.socket);\r\n  const step = useSelector((state) => state.gameSetup.step);\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const leaveGameHandler = () => {\r\n    socket.disconnect();\r\n    navigate(\"/\");\r\n    dispatch(wordsActions.reset());\r\n    dispatch(lobbyActions.reset());\r\n    dispatch(gameSetupActions.reset());\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      {step === \"gameOver\" && (\r\n        <>\r\n          <h3>Game Over</h3>\r\n          <p>Scoreboard</p>\r\n          <Scoreboard />\r\n          <button className={classes.btn} onClick={leaveGameHandler}>\r\n            Leave Game\r\n          </button>\r\n        </>\r\n      )}\r\n      {step !== \"gameOver\" && <WrongRoute />}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default GameOver;\r\n","import Homepage from \"./routes/Homepage\";\r\nimport Example from \"./routes/Example\";\r\nimport GameSetup from \"./routes/GameSetup\";\r\nimport InGame from \"./routes/InGame\";\r\n\r\nimport Header from \"./components/Layout/Header\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { gameSetupActions, wordsActions, lobbyActions } from \"./store\";\r\nimport Lobby from \"./routes/Lobby\";\r\nimport { io } from \"socket.io-client\";\r\nimport { useEffect, useState } from \"react\";\r\nimport LoadingBar from \"./components/UI/LoadingBar\";\r\nimport Joingame from \"./routes/Joingame\";\r\nimport GameOver from \"./routes/GameOver\";\r\nimport { useNavigate } from \"react-router\";\r\n\r\nconst App = () => {\r\n  const navigate = useNavigate();\r\n  const socket = useSelector((state) => state.gameSetup.socket);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    const updateData = async () => {\r\n      const response = await fetch(\"/api/game-status\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      const data = await response.json();\r\n      if (data.connect === true && !socket) {\r\n        const socket = io();\r\n        dispatch(gameSetupActions.setSocket({ socket }));\r\n        socket.on(\r\n          \"rejoin game\",\r\n          (\r\n            username,\r\n            step,\r\n            reply,\r\n            guesses,\r\n            score,\r\n            correct,\r\n            incorrect,\r\n            guess,\r\n            answer,\r\n            host,\r\n            questionNumber,\r\n            numQuestions\r\n          ) => {\r\n            dispatch(gameSetupActions.setUsername({ username }));\r\n            dispatch(gameSetupActions.setStep({ step }));\r\n            dispatch(\r\n              wordsActions.setNextReply({\r\n                reply,\r\n                guesses,\r\n                questionNumber,\r\n                numQuestions,\r\n              })\r\n            );\r\n            dispatch(wordsActions.setSubmitAnswer({ guess }));\r\n            dispatch(wordsActions.setAnswer({ answer }));\r\n            dispatch(wordsActions.setScore({ score, correct, incorrect }));\r\n            dispatch(gameSetupActions.setHost({ host }));\r\n            navigate(\"/ingame\");\r\n          }\r\n        );\r\n        socket.on(\"rejoin lobby\", (username, step, usernames, code, host) => {\r\n          dispatch(gameSetupActions.setUsername({ username }));\r\n          dispatch(gameSetupActions.setStep({ step }));\r\n          dispatch(lobbyActions.setAllPlayers({ usernames }));\r\n          dispatch(lobbyActions.setCode({ code }));\r\n          dispatch(gameSetupActions.setHost({ host }));\r\n          navigate(\"/lobby\");\r\n        });\r\n        socket.on(\r\n          \"rejoin gameover\",\r\n          (username, step, finalScores, correctArray, answerTimeArray) => {\r\n            dispatch(gameSetupActions.setUsername({ username }));\r\n            dispatch(gameSetupActions.setStep({ step }));\r\n            dispatch(\r\n              gameSetupActions.setFinalScores({\r\n                finalScores,\r\n                correctArray,\r\n                answerTimeArray,\r\n              })\r\n            );\r\n\r\n            navigate(\"/gameover\");\r\n          }\r\n        );\r\n      }\r\n      setIsLoading(false);\r\n    };\r\n\r\n    updateData();\r\n  }, [navigate, dispatch]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      {isLoading && <LoadingBar />}\r\n      {!isLoading && (\r\n        <Routes>\r\n          <Route path=\"/\" element={<Homepage />} />\r\n          <Route path=\"/gamesetup\" element={<GameSetup />} />\r\n          <Route path=\"/example\" element={<Example />} />\r\n          <Route path=\"/joingame\" element={<Joingame />} />\r\n          <Route path=\"/lobby\" element={<Lobby />} />\r\n          <Route path=\"/ingame\" element={<InGame />} />\r\n          <Route path=\"/gameover\" element={<GameOver />} />\r\n        </Routes>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./store/index\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"guess_who\":\"Reveal_guess_who__1iCdy\",\"loading\":\"Reveal_loading__1kbp7\",\"modal\":\"Reveal_modal__345Eb\",\"meals-appear\":\"Reveal_meals-appear__1Yn7W\",\"modal_correct\":\"Reveal_modal_correct__GuJII\",\"modal_incorrect\":\"Reveal_modal_incorrect__iwunu\",\"overlay\":\"Reveal_overlay__3mRZG\",\"btn\":\"Reveal_btn__2NjWW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Lobby_btn__37sXC\",\"button-appear\":\"Lobby_button-appear__2AVlz\",\"arrow\":\"Lobby_arrow__3jvkU\",\"arrow_up\":\"Lobby_arrow_up__3vciz\",\"arrow_down\":\"Lobby_arrow_down__rgr8t\",\"btn_copy\":\"Lobby_btn_copy__1WNv4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"guess_who\":\"Reveal_guess_who__c0Utd\",\"loading\":\"Reveal_loading__31-70\",\"start\":\"Reveal_start__bGcVs\",\"meals-appear\":\"Reveal_meals-appear__1yoaE\",\"modal\":\"Reveal_modal__3gS3A\",\"modal_correct\":\"Reveal_modal_correct__mlY7-\",\"modal_incorrect\":\"Reveal_modal_incorrect__3xrJm\",\"overlay\":\"Reveal_overlay__3_iae\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"score\":\"Score_score__1kKlN\",\"score_correct\":\"Score_score_correct__2ir3t\",\"score_incorrect\":\"Score_score_incorrect__125SO\",\"score_value\":\"Score_score_value__Mq7ck\",\"score_number\":\"Score_score_number__1FR9U\",\"number-appear\":\"Score_number-appear__1ioaT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"joingame\":\"Joingame_joingame__3b2Ya\",\"button-appear\":\"Joingame_button-appear__2r_z1\",\"btn\":\"Joingame_btn__2c61m\",\"username\":\"Joingame_username__2aBBT\",\"modal\":\"Joingame_modal__uK9w8\",\"meals-appear\":\"Joingame_meals-appear__3ZTy5\",\"overlay\":\"Joingame_overlay__-kBwI\",\"modal_text\":\"Joingame_modal_text__3VdgX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stats_question\":\"Scoreboard_stats_question__3YP33\",\"stats_correct\":\"Scoreboard_stats_correct__3NNOA\",\"stats_time\":\"Scoreboard_stats_time__ZKJIB\",\"name\":\"Scoreboard_name__qVwiR\",\"scorebar\":\"Scoreboard_scorebar__3Y590\",\"score\":\"Scoreboard_score__I52qi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"score\":\"Score_score__323k1\",\"score_correct\":\"Score_score_correct__3mrPJ\",\"score_incorrect\":\"Score_score_incorrect__3zcTU\",\"score_number\":\"Score_score_number__1k3Os\",\"number-appear\":\"Score_number-appear__268oa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2gCm2\",\"header_container\":\"Header_header_container__z87iA\",\"header_text\":\"Header_header_text__2nD7C\",\"username\":\"Header_username__20a0h\",\"logout\":\"Header_logout__D0BO6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"participant\":\"Participant_participant__1AsTm\",\"meals-appear\":\"Participant_meals-appear__2Q8E9\",\"participant_correct\":\"Participant_participant_correct__2Z554\",\"participant_incorrect\":\"Participant_participant_incorrect__rCs5g\",\"participant_selected\":\"Participant_participant_selected__2vSW2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"participant\":\"Participant_participant__3oVs-\",\"meals-appear\":\"Participant_meals-appear__3SVCJ\",\"participant_correct\":\"Participant_participant_correct__2pNik\",\"participant_incorrect\":\"Participant_participant_incorrect__Eeaml\",\"participant_guess\":\"Participant_participant_guess__ayOwV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Homepage_btn__1kodd\",\"button-appear\":\"Homepage_button-appear__2Bhli\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"HiddenInput_input__1iPqV\",\"filename\":\"HiddenInput_filename__1-wmd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__N0hQD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ExampleStartButton_button__2bhSM\",\"example-appear\":\"ExampleStartButton_example-appear__2J62R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"next\":\"NextWord_next__3mAGA\",\"meals-appear\":\"NextWord_meals-appear__3_ZC4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"LoadingBar_loading__bA3Df\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"username\":\"GameSetup_username__W_4Ak\",\"button-appear\":\"GameSetup_button-appear__1Phb1\",\"btn\":\"GameSetup_btn__3xbDJ\",\"btn_selected\":\"GameSetup_btn_selected__3_wmN\",\"loading\":\"GameSetup_loading__pLx-w\",\"participant\":\"GameSetup_participant__1II1C\",\"participant_label\":\"GameSetup_participant_label__7hmrZ\",\"participant_input\":\"GameSetup_participant_input__1q-yZ\",\"modal\":\"GameSetup_modal__2j4-1\",\"meals-appear\":\"GameSetup_meals-appear__2nqg8\",\"overlay\":\"GameSetup_overlay__2nk3y\",\"modal_text\":\"GameSetup_modal_text__2nqtu\",\"modal_info\":\"GameSetup_modal_info__2sG6-\",\"info_div\":\"GameSetup_info_div__1TCkd\",\"info_btn\":\"GameSetup_info_btn__fHWQm\",\"info_text\":\"GameSetup_info_text__2k9On\",\"info_anchor\":\"GameSetup_info_anchor__2gInx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"next\":\"NextWord_next__HkU8l\",\"meals-appear\":\"NextWord_meals-appear__2fOX8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"WrongRoute_btn__ZFC-T\",\"button-appear\":\"WrongRoute_button-appear__2YCOZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"username\":\"Player_username__37AkP\",\"button-appear\":\"Player_button-appear__o45vB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"GameOver_btn__2mHd5\",\"meals-appear\":\"GameOver_meals-appear__3O_Vi\"};"],"sourceRoot":""}